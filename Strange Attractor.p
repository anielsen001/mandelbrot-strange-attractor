Program StrangeAttractor;	Var		numpoints: integer;		x, y: real;		wStorage: Ptr;		boundsRect: rect;		title: Str255;		visible, goAwayFlag: Boolean;		procID: integer;		behind: windowPtr;		refcon: longint;		AttractorView: WindowRecord;		AttractorViewPtr: windowPtr;		screenwidth, screenheight: integer;		halfscreenwidth, halfscreenheight: integer;	Procedure GraphPoint (x, y: real; screenwidth, screenheight, halfscreenwidth, halfscreenheight: integer);		Var			w, z: integer;			thirdscreenheight: integer;	Begin		thirdscreenheight := round(screenheight / 1);		w := -round(x * thirdscreenheight);		z := -round(y * thirdscreenheight);		MoveTo(halfscreenwidth, halfscreenheight);		move(w, z);		line(0, 0)	End;{GraphPoint}Begin {StrangAttractor}	screenwidth := screenbits.bounds.right;	screenheight := screenbits.bounds.bottom;	halfscreenwidth := round(screenwidth / 2);	halfscreenheight := round(screenheight / 2);	wStorage := @AttractorView;	BoundsRect := screenbits.bounds;	title := 'Strange Attractor';	visible := true;	procID := noGrowDocProc;	behind := pointer(-1);	Refcon := 1;	goAwayFlag := false;	AttractorViewPtr := NewWindow(wStorage, boundsrect, title, visible, procID, behind, goAwayFlag, refcon);	SetPort(AttractorViewPtr);	X := 0.1;	y := 0.1;	numpoints := 0;	While (numpoints < 1000) Do		Begin			x := y + 1 - 1.4 * sqr(x);			y := 0.3 * x;			numpoints := numpoints + 1;			GraphPoint(x, y, screenwidth, screenheight, halfscreenwidth, halfscreenheight)		End;{while}End.