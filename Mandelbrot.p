Program MandelbrotSet;	Type		complex = Record				realpart: real;				imagpart: real			End;	Var		setflag: boolean;		numtests: integer;		x, y: real;		loop1, loop2: integer;		z, c: complex;		wStorage: Ptr;		boundsRect: Rect;		title: Str255;		visible, goAwayFlag: Boolean;		procID: integer;		behind: WindowPtr;		refcon: longint;		MandelbrotView: WindowRecord;		MandelbrotViewPtr: WindowPtr;		screenwidth, screenheight: integer;		halfscreenwidth, halfscreenheight: integer;	Function AddComplex (complex1, complex2: complex): complex;	Begin		AddComplex.realpart := complex1.realpart + complex2.realpart;		AddComplex.imagpart := complex1.imagpart + complex2.imagpart	End; {AddComplex}	Function MultComplex (complex1, complex2: complex): complex;	Begin		MultComplex.realpart := (complex1.realpart * complex2.realpart) - (complex1.imagpart * complex2.imagpart);		MultComplex.imagpart := (complex1.realpart * complex2.imagpart) + (complex1.imagpart * complex2.realpart)	End; {MultComplex}	Procedure GraphPoint (x, y: real; screenwidth, screenheight, halfscreenwidth, halfscreenheight: integer);		Var			w, z: integer;			thirdscreenheight: integer;	Begin		thirdscreenheight := round(screenheight / 3);		w := -round(x * thirdscreenheight);		z := -round(y * thirdscreenheight);		MoveTo(halfscreenwidth, halfscreenheight);		move(w, z);		line(0, 0)	End;{GraphPoint}Begin {MandelbrotSet}	screenwidth := screenbits.bounds.right;	screenheight := screenbits.bounds.bottom;	halfscreenwidth := round(screenwidth / 2);	halfscreenheight := round(screenheight / 2);	wStorage := @MandelbrotView;	BoundsRect := screenbits.bounds;	title := 'Mandelbrot Set';	visible := true;	procID := noGrowDocProc;	behind := pointer(-1);	RefCon := 16;	goAwayFlag := false;	MandelbrotViewPtr := NewWindow(wStorage, boundsrect, title, visible, procID, behind, goAwayFlag, refcon);	SetPort(MandelbrotViewPtr);	For loop1 := -100 To 100 Do		Begin			c.realpart := loop1;			c.realpart := c.realpart / 33;			For loop2 := -100 To 100 Do				Begin					c.imagpart := -loop2;					c.imagpart := c.imagpart / 33;					z.realpart := 0;					z.imagpart := 0;					numtests := 0;					setflag := true;					While (numtests < 100) And setflag Do						Begin							z := MultComplex(z, z);							z := AddComplex(z, c);							numtests := numtests + 1;							If (z.realpart < -2) Or (z.realpart > 2) Or (z.imagpart < -2) Or (z.imagpart > 2) Then								setflag := false						End; {while}					If setflag Then						Begin							x := c.realpart;							y := c.imagpart;							GraphPoint(x, y, screenwidth, screenheight, halfscreenwidth, halfscreenheight)						End {if}				End {loop2}		End; {loop1}End. {MandlebrotSet}